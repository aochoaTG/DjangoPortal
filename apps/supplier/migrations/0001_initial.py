# Generated by Django 5.0.9 on 2025-02-14 22:19

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReqReqMat',
            fields=[
                ('id_req_mat', models.IntegerField(primary_key=True, serialize=False, verbose_name='ID de Requisición')),
                ('id_usr', models.IntegerField(verbose_name='ID de Usuario')),
                ('id_nota', models.IntegerField(verbose_name='ID de Nota')),
                ('id_emp_sol', models.IntegerField(verbose_name='ID del Solicitante')),
                ('id_emp_dir', models.IntegerField(verbose_name='ID del Empleado Dirigido')),
                ('id_emp_apr', models.IntegerField(verbose_name='ID del Aprobador')),
                ('id_tip_doc', models.IntegerField(verbose_name='ID del Tipo de Documento')),
                ('num_doc', models.IntegerField(unique=True, verbose_name='Número de Documento')),
                ('fec_doc', models.DateTimeField(verbose_name='Fecha del Documento')),
                ('fec_req', models.DateTimeField(verbose_name='Fecha de Requisición')),
                ('fec_apr', models.DateTimeField(verbose_name='Fecha de Aprobación')),
                ('sub', models.FloatField(verbose_name='Subtotal')),
                ('imps', models.FloatField(verbose_name='Impuestos')),
                ('total', models.FloatField(verbose_name='Total')),
                ('ref', models.CharField(blank=True, max_length=200, null=True, verbose_name='Referencia')),
                ('status', models.PositiveSmallIntegerField(verbose_name='Estatus')),
                ('id_cpt', models.IntegerField(verbose_name='ID de Concepto')),
                ('c_rec', models.PositiveSmallIntegerField(verbose_name='Cantidad Recibida')),
                ('c_lib', models.PositiveSmallIntegerField(verbose_name='Cantidad Liberada')),
                ('id_suc', models.IntegerField(verbose_name='ID de Sucursal')),
                ('id_sesion', models.IntegerField(verbose_name='ID de Sesión')),
                ('fec_reg_lib_cot', models.DateTimeField(verbose_name='Fecha de Registro de Liberación de Cotización')),
                ('id_emp_lib_cot', models.IntegerField(verbose_name='ID del Empleado que Liberó la Cotización')),
                ('fec_reg_lib_apr', models.DateTimeField(verbose_name='Fecha de Registro de Liberación de Aprobación')),
                ('id_emp_lib_apr', models.IntegerField(verbose_name='ID del Empleado que Liberó la Aprobación')),
                ('id_mda', models.IntegerField(verbose_name='ID de Moneda')),
                ('oper', models.PositiveSmallIntegerField(verbose_name='Operación')),
                ('tc', models.FloatField(verbose_name='Tipo de Cambio')),
                ('id_nota_desl', models.BigIntegerField(verbose_name='ID de Nota de Deslinde')),
            ],
            options={
                'verbose_name': 'Requisición de Material',
                'verbose_name_plural': 'Requisiciones de Material',
                'db_table': 'req_req_mat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReqReqMatDet',
            fields=[
                ('id_req_mat_det', models.IntegerField(default=0, primary_key=True, serialize=False)),
                ('id_nota', models.IntegerField(default=0)),
                ('id_nota_rech', models.IntegerField(default=0, help_text='En caso de rechazo el Motivo en la nota')),
                ('id_pro', models.IntegerField(default=0)),
                ('id_emp_apr', models.IntegerField(default=0, help_text='Id del empleado que aprobó')),
                ('cant', models.FloatField(default=0)),
                ('costo', models.FloatField(default=0)),
                ('total', models.FloatField(default=0)),
                ('fec_req', models.DateTimeField(default='1900-01-01')),
                ('fec_apr', models.DateTimeField(default='1900-01-01')),
                ('cant_pend', models.FloatField(default=0, help_text='Cantidad Pendiente')),
                ('status', models.PositiveSmallIntegerField(default=3, help_text='0=Cancelada, 1=Liberada, 2=Concluida, 3=Sin Liberar, 4=Rechazada')),
                ('cant_aprob', models.FloatField(default=0)),
                ('id_nota_desc', models.IntegerField(default=0)),
                ('udm', models.CharField(default='', max_length=5)),
                ('ftr', models.FloatField(default=1)),
                ('id_emp_req', models.IntegerField(default=0)),
                ('id_alm', models.IntegerField(default=0)),
                ('id_impto', models.IntegerField(default=0)),
                ('id_cod_srv', models.IntegerField(default=0)),
                ('id_rel_cot', models.IntegerField(default=0)),
                ('id_usr_apr_rch', models.IntegerField(default=0)),
                ('id_part_oc', models.IntegerField(default=0)),
                ('id_suc_req', models.IntegerField(default=0)),
                ('id_udm', models.IntegerField(default=0)),
                ('id_req_cot', models.IntegerField(default=0)),
                ('id_gto', models.IntegerField(default=0, help_text='ID de la entidad')),
                ('id_cen_cto', models.IntegerField(default=0, help_text='ID del centro de costo')),
                ('id_ref', models.IntegerField(default=0, help_text='ID de la referencia')),
                ('id_prov1', models.IntegerField(default=0, help_text='ID del proveedor sugerido')),
                ('id_prov2', models.IntegerField(default=0, help_text='ID2 del proveedor sugerido')),
                ('id_prov3', models.IntegerField(default=0, help_text='ID del proveedor')),
                ('monto_impto', models.FloatField(default=0)),
                ('totalCImpto', models.FloatField(default=0)),
                ('id_rel_imp', models.IntegerField(default=0)),
                ('id_rel_fac_det', models.IntegerField(default=0)),
                ('id_prov_det', models.IntegerField(default=0)),
                ('c_ind', models.IntegerField(default=0)),
                ('acu_rec', models.FloatField(default=0)),
                ('acu_rec_cxp', models.FloatField(default=0)),
                ('id_com_ser_lot', models.IntegerField(default=0)),
                ('gastos', models.FloatField(default=0)),
                ('gastos_bse', models.FloatField(default=0)),
                ('num_part', models.IntegerField(default=0)),
                ('c_mis_doc', models.PositiveSmallIntegerField(default=0)),
                ('id_bkr', models.IntegerField(default=0)),
                ('id_vig_pre', models.IntegerField(default=0)),
                ('c_apr_auto', models.PositiveSmallIntegerField(default=0)),
                ('descuento', models.FloatField(default=0)),
                ('CtoNeto', models.FloatField(default=0)),
                ('id_cta', models.IntegerField(default=0)),
                ('id_tip_cta', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Requisición de Material Detalle',
                'verbose_name_plural': 'Requisiciones de Material Detalle',
                'db_table': 'req_req_mat_det',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatSupplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('software_origin', models.CharField(max_length=100, verbose_name='Origen del software')),
                ('company', models.CharField(max_length=150, verbose_name='Empresa')),
                ('external_id', models.IntegerField(verbose_name='ID Externo')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombre')),
                ('rfc', models.CharField(max_length=13, verbose_name='RFC')),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Código postal')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=100, null=True, verbose_name='Estado')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo electrónico')),
                ('bank', models.CharField(blank=True, max_length=100, null=True, verbose_name='Banco')),
                ('account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de cuenta')),
                ('clabe', models.CharField(blank=True, max_length=18, null=True, verbose_name='CLABE')),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True, verbose_name='Forma de pago')),
                ('currency', models.CharField(blank=True, max_length=10, null=True, verbose_name='Moneda')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Sitio web')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('category', models.CharField(blank=True, max_length=100, null=True, verbose_name='Categoría')),
                ('active', models.BooleanField(default=True, verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
            ],
            options={
                'verbose_name': 'CatProveedor',
                'verbose_name_plural': 'CatProveedores',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Máximo 50 caracteres', max_length=50, verbose_name='Título')),
                ('text', models.TextField(help_text='Máximo 500 caracteres', max_length=500, verbose_name='Texto')),
                ('image', models.ImageField(blank=True, null=True, upload_to='notices/', verbose_name='Imagen')),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de publicación')),
                ('visible_until', models.DateTimeField(blank=True, null=True, verbose_name='Visible hasta')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Cominicado',
                'verbose_name_plural': 'Comunicados',
            },
        ),
        migrations.CreateModel(
            name='NoticeSeen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seen', models.BooleanField(default=False, verbose_name='Visto')),
                ('do_not_show_again', models.BooleanField(default=False, verbose_name='No mostrar de nuevo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualización')),
                ('notice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplier.notice', verbose_name='Comunicado')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Proveedor')),
            ],
            options={
                'verbose_name': 'Comunicado Visto',
                'verbose_name_plural': 'Comunicados Vistos',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(help_text='Razón social o nombre comercial', max_length=150, verbose_name='Nombre de la Empresa')),
                ('rfc', models.CharField(help_text='Registro Federal de Contribuyentes (RFC) de la empresa', max_length=13, unique=True, verbose_name='RFC')),
                ('address', models.TextField(help_text='Dirección fiscal completa de la empresa', verbose_name='Dirección Fiscal')),
                ('phone_number', models.CharField(help_text='Teléfono principal de la empresa', max_length=15, verbose_name='Teléfono')),
                ('email', models.EmailField(help_text='Correo electrónico de contacto', max_length=100, verbose_name='Correo Electrónico')),
                ('contact_person', models.CharField(help_text='Nombre de la persona encargada del contacto', max_length=100, verbose_name='Persona de Contacto')),
                ('contact_phone', models.CharField(blank=True, help_text='Número de teléfono de contacto, 10 dígitos', max_length=10, null=True, verbose_name='Teléfono de Contacto')),
                ('supplier_type', models.CharField(choices=[('product', 'Productos'), ('service', 'Servicios'), ('product_service', 'Productos y Servicios')], help_text='Especifica si provee productos, servicios o ambos', max_length=20, verbose_name='Tipo de Proveedor')),
                ('tax_regime', models.CharField(choices=[('individual', 'Persona Física'), ('corporation', 'Persona Moral'), ('resico', 'Régimen Simplificado de Confianza')], help_text='Régimen fiscal bajo el cual tributa', max_length=20, verbose_name='Régimen Fiscal')),
                ('bank_name', models.CharField(help_text='Nombre del banco para recepción de pagos', max_length=100, verbose_name='Banco')),
                ('account_number', models.CharField(help_text='Número de cuenta bancaria', max_length=20, verbose_name='Número de Cuenta')),
                ('clabe', models.CharField(help_text='CLABE interbancaria de 18 dígitos', max_length=18, verbose_name='CLABE Interbancaria')),
                ('currency', models.CharField(choices=[('MXN', 'Pesos Mexicanos'), ('USD', 'Dólares Americanos'), ('EUR', 'Euros')], help_text='Moneda en la que se realizarán los pagos', max_length=3, verbose_name='Moneda')),
                ('fiscal_situation', models.FileField(blank=True, help_text='Archivo de la constancia de situación fiscal', null=True, upload_to='supplier_files/fiscal_situation/', verbose_name='Constancia de Situación Fiscal')),
                ('address_proof', models.FileField(blank=True, help_text='Archivo del comprobante de domicilio', null=True, upload_to='supplier_files/address_proof/', verbose_name='Comprobante de Domicilio')),
                ('bank_statement', models.FileField(blank=True, help_text='Archivo de la carátula bancaria', null=True, upload_to='supplier_files/bank_statement/', verbose_name='Carátula Bancaria')),
                ('sat_positive_opinion', models.FileField(blank=True, help_text='Archivo de la opinión positiva del SAT', null=True, upload_to='supplier_files/sat_positive_opinion/', verbose_name='Opinión Positiva del SAT')),
                ('incorporation_act', models.FileField(blank=True, help_text='Archivo del acta constitutiva', null=True, upload_to='supplier_files/incorporation_act/', verbose_name='Acta Constitutiva')),
                ('legal_power', models.FileField(blank=True, help_text='Archivo del poder legal', null=True, upload_to='supplier_files/legal_power/', verbose_name='Poder Legal')),
                ('identification', models.FileField(blank=True, help_text='Archivo de identificación oficial', null=True, upload_to='supplier_files/identification/', verbose_name='Identificación')),
                ('imss_opinion', models.FileField(blank=True, help_text='Archivo de la opinión del IMSS', null=True, upload_to='supplier_files/imss_opinion/', verbose_name='Opinión del IMSS')),
                ('infonavit_opinion', models.FileField(blank=True, help_text='Archivo de la opinión del INFONAVIT', null=True, upload_to='supplier_files/infonavit_opinion/', verbose_name='Opinión del INFONAVIT')),
                ('supplier_registration_request', models.FileField(blank=True, help_text='Archivo de la solicitud de alta de proveedor', null=True, upload_to='supplier_files/supplier_registration_request/', verbose_name='Solicitud Alta de Proveedor')),
                ('repse', models.FileField(blank=True, help_text='Archivo del REPSE', null=True, upload_to='supplier_files/repse/', verbose_name='REPSE')),
                ('confidentiality_agreement', models.FileField(blank=True, help_text='Archivo del acta de confidencialidad', null=True, upload_to='supplier_files/confidentiality_agreement/', verbose_name='Acta de Confidencialidad')),
                ('induction_course', models.FileField(blank=True, help_text='Archivo del curso de inducción', null=True, upload_to='supplier_files/induction_course/', verbose_name='F-06-01-05 Curso de Inducción')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha en que se creó el proveedor', verbose_name='Fecha de Creación')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Fecha de la última actualización del proveedor', verbose_name='Fecha de Actualización')),
                ('user', models.OneToOneField(help_text='Usuario asociado al proveedor', on_delete=django.db.models.deletion.CASCADE, related_name='supplier_profile', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Proveedor',
                'verbose_name_plural': 'Proveedores',
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='SupplierQuoteRequest',
            fields=[
                ('id', models.AutoField(help_text='Identificador único para cada solicitud de cotización', primary_key=True, serialize=False)),
                ('company', models.CharField(help_text='Nombre de la empresa para la que se solicita la cotización', max_length=100, verbose_name='Empresa')),
                ('viewed_at', models.DateTimeField(blank=True, help_text='Fecha y hora en que el proveedor visualizó la solicitud por primera vez', null=True, verbose_name='Fecha de Visualización')),
                ('notes', models.TextField(blank=True, help_text='Notas o comentarios adicionales sobre la solicitud de cotización', null=True, verbose_name='Notas')),
                ('status', models.CharField(default='PENDIENTE', help_text="Estado actual de la solicitud. Por defecto es 'PENDIENTE'", max_length=50, null=True, verbose_name='Estatus')),
                ('updated_at', models.DateTimeField(blank=True, help_text='Fecha y hora de la última actualización de la solicitud', null=True, verbose_name='Fecha de Actualización')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Fecha y hora en que se creó la solicitud. Se establece automáticamente', verbose_name='Fecha de Creación')),
                ('supplier', models.ForeignKey(db_column='supplier_id', help_text='Proveedor al que se le solicita la cotización. Se eliminarán todas las solicitudes si se elimina el proveedor', on_delete=django.db.models.deletion.CASCADE, related_name='quote_requests', to='supplier.supplier', verbose_name='Proveedor')),
                ('user', models.ForeignKey(db_column='user_id', help_text='Usuario que genera la solicitud de cotización. Se eliminarán todas las solicitudes si se elimina el usuario', on_delete=django.db.models.deletion.CASCADE, related_name='supplier_quote_requests', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Solicitud de Cotización del Proveedor',
                'verbose_name_plural': 'Solicitudes de Cotización de Proveedores',
                'db_table': 'supplier_quote_request',
            },
        ),
        migrations.CreateModel(
            name='SupplierQuoteRequestItem',
            fields=[
                ('id', models.AutoField(help_text='Identificador único para cada ítem de la solicitud', primary_key=True, serialize=False)),
                ('requisition_id', models.IntegerField(help_text='Identificador de la requisición asociada a este ítem', verbose_name='ID de Requisición')),
                ('requisition_line', models.IntegerField(help_text='Número de línea de la requisición asociada a este ítem', verbose_name='Línea de Requisición')),
                ('description', models.TextField(blank=True, help_text='Descripción del ítem solicitado', max_length=250, null=True, verbose_name='Descripción')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Cantidad solicitada del ítem. Permite hasta 2 decimales', max_digits=10, verbose_name='Cantidad')),
                ('price', models.DecimalField(decimal_places=2, help_text='Precio unitario del ítem. Permite hasta 2 decimales', max_digits=10, verbose_name='Precio Unitario')),
                ('unit_of_measurement', models.CharField(blank=True, help_text='Unidad de medida en la que se solicita el ítem', max_length=50, null=True, verbose_name='Unidad de Medida')),
                ('total', models.DecimalField(decimal_places=2, help_text='Total calculado automáticamente (cantidad × precio). Permite hasta 2 decimales', max_digits=10, verbose_name='Total')),
                ('currency', models.CharField(choices=[('MXN', 'Pesos'), ('USD', 'Dólares'), ('EUR', 'Euros')], default='MXN', help_text='Moneda en la que se cotiza el ítem. Puede ser MXN (Pesos), USD (Dólares) o EUR (Euros)', max_length=3, verbose_name='Moneda')),
                ('notes', models.TextField(blank=True, help_text='Notas o comentarios adicionales sobre este ítem específico', null=True, verbose_name='Notas')),
                ('quote_request', models.ForeignKey(help_text='Solicitud de cotización a la que pertenece este ítem. Se eliminará si se elimina la solicitud', on_delete=django.db.models.deletion.CASCADE, related_name='items', to='supplier.supplierquoterequest', verbose_name='Solicitud de Cotización')),
            ],
            options={
                'verbose_name': 'Detalle de Solicitud de Cotización',
                'verbose_name_plural': 'Detalles de Solicitudes de Cotización',
                'db_table': 'supplier_quote_request_item',
            },
        ),
    ]
