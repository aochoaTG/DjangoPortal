# Generated by Django 5.0.9 on 2025-03-10 02:15

from django.db import migrations


# Datos iniciales para los tipos de documentos
DOCUMENT_TYPES = [
    {
        'name': 'Constancia de Situación Fiscal',
        'code': 'fiscal_situation',
        'description': 'Archivo de la constancia de situación fiscal',
        'is_required': True,
        'upload_path': 'fiscal_situation'
    },
    {
        'name': 'Comprobante de Domicilio',
        'code': 'address_proof',
        'description': 'Archivo del comprobante de domicilio',
        'is_required': True,
        'upload_path': 'address_proof'
    },
    {
        'name': 'Carátula Bancaria',
        'code': 'bank_statement',
        'description': 'Archivo de la carátula bancaria',
        'is_required': True,
        'upload_path': 'bank_statement'
    },
    {
        'name': 'Opinión Positiva del SAT',
        'code': 'sat_positive_opinion',
        'description': 'Archivo de la opinión positiva del SAT',
        'is_required': True,
        'upload_path': 'sat_positive_opinion'
    },
    {
        'name': 'Acta Constitutiva',
        'code': 'incorporation_act',
        'description': 'Archivo del acta constitutiva',
        'is_required': False,
        'upload_path': 'incorporation_act'
    },
    {
        'name': 'Poder Legal',
        'code': 'legal_power',
        'description': 'Archivo del poder legal',
        'is_required': False,
        'upload_path': 'legal_power'
    },
    {
        'name': 'Identificación',
        'code': 'identification',
        'description': 'Archivo de identificación oficial',
        'is_required': True,
        'upload_path': 'identification'
    },
    {
        'name': 'Opinión del IMSS',
        'code': 'imss_opinion',
        'description': 'Archivo de la opinión del IMSS',
        'is_required': False,
        'upload_path': 'imss_opinion'
    },
    {
        'name': 'Opinión del INFONAVIT',
        'code': 'infonavit_opinion',
        'description': 'Archivo de la opinión del INFONAVIT',
        'is_required': False,
        'upload_path': 'infonavit_opinion'
    },
    {
        'name': 'Solicitud Alta de Proveedor',
        'code': 'supplier_registration_request',
        'description': 'Archivo de la solicitud de alta de proveedor',
        'is_required': True,
        'upload_path': 'supplier_registration_request'
    },
    {
        'name': 'REPSE',
        'code': 'repse',
        'description': 'Archivo del REPSE',
        'is_required': False,
        'upload_path': 'repse'
    },
    {
        'name': 'Acta de Confidencialidad',
        'code': 'confidentiality_agreement',
        'description': 'Archivo del acta de confidencialidad',
        'is_required': False,
        'upload_path': 'confidentiality_agreement'
    },
    {
        'name': 'F-06-01-05 Curso de Inducción',
        'code': 'induction_course',
        'description': 'Archivo del curso de inducción',
        'is_required': False,
        'upload_path': 'induction_course'
    },
]

def load_document_types(apps, schema_editor):
    # Obtenemos el modelo DocumentType
    DocumentType = apps.get_model('supplier', 'DocumentType')
    
    # Creamos cada tipo de documento
    for doc_type in DOCUMENT_TYPES:
        DocumentType.objects.get_or_create(
            code=doc_type['code'],
            defaults={
                'name': doc_type['name'],
                'description': doc_type['description'],
                'is_required': doc_type['is_required'],
                'upload_path': doc_type['upload_path']
            }
        )

def reverse_load_document_types(apps, schema_editor):
    # Obtenemos el modelo DocumentType
    DocumentType = apps.get_model('supplier', 'DocumentType')
    
    # Eliminamos los tipos de documentos creados
    for doc_type in DOCUMENT_TYPES:
        DocumentType.objects.filter(code=doc_type['code']).delete()

class Migration(migrations.Migration):

    dependencies = [
        # Asegúrate de que esta migración dependa de la que creó el modelo DocumentType
        ('supplier', '0005_documenttype_supplierdocument'),  # Reemplaza XXXX con el número correcto
    ]

    operations = [
        migrations.RunPython(load_document_types, reverse_load_document_types),
    ]